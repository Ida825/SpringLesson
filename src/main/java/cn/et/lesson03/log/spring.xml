<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	">
	
	<!-- 扫描 -->
	<context:component-scan base-package="cn.*.lesson03.log">
	</context:component-scan>
	
	<!-- 配置aop -->
	<aop:config>
		<!-- 定义切点 （搜索条件）
			表达式:execution(返回值 包，类，方法（参数）)
		-->
		<aop:pointcut expression="execution(* cn.*..*.log.*.*(..))" id="myPointCut"/>

		<aop:aspect ref="myMessage">
			<aop:before method="beforeSeek" pointcut-ref="myPointCut"/>
		</aop:aspect>	
	</aop:config>
	
	<!-- 
		Spring AOP部分使用JDK动态代理或者CGLIB来为目标对象创建代理，
		如果被代理的目标对象实现了至少一个接口，则会使用JDK动态代理。
		所有该目标类型实现的接口都将被代理。若该目标对象没有实现任何接口，
		则创建一个CGLIB代理。使用beanNameAutoProxyCreator来进行事务代理的话，
		他的proxyTargetClass这个属性设置为false(默认是false)，
		即使用JDK动态代理，如果你的service类没有实现接口的话，就会报类型转换错误。
		
		代理对象不需要实现接口，目标对象一定要实现接口，否则不能用动态代理
		
		<aop:aspectj-autoproxy proxy-target-class="true"/>
	 -->
	
</beans>